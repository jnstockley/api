name: Publish Docker image

on:
  release:
    types: [published]
  pull_request:
  push:
    branches:
      - main
    paths:
      - Dockerfile
      - src/**
      - poetry.lock
      - pyproject.toml

jobs:
  lint:
    name: Python Lint
    runs-on: ubuntu-latest
    steps:
      - name: Step 1 - Checkout
        uses: actions/checkout@v4
      - name: Step 2 - Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true
      - name: Step 3 - Install Poetry and Dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --no-root --with test
      - name: Step 4 - Lint
        run: |
          poetry run black src/ --check
          poetry run black test/ --check
          poetry run isort src/ --check
          poetry run isort test/ --check

  tests:
    needs:
      - lint
    name: Python Tests
    runs-on: ubuntu-latest

    steps:
      - name: Step 1 - Checkout
        uses: actions/checkout@v4
      - name: Step 2 - Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
          check-latest: true
      - name: Step 3 - Install Poetry and Dependencies
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry install --no-root --with test
      - name: Step 4 - Run Tests
        run: |
          export api_key=${{ secrets.API_KEY }}
          export PYTHONPATH=src:$PYTHONPATH
          poetry run pytest test

  push_to_registries:
    if: github.event_name == 'release' || github.base_ref == 'main'
    needs:
      - lint
      - tests
    name: Push Docker image to multiple registries
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.ACTIONS_GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: github.event_name == 'release'
        uses: docker/metadata-action@v5
        with:
          images: |
            jnstockley/api
            ghcr.io/${{ github.repository }}
          tags: |
            latest
            ${{ github.event.release.tag_name }}

      - name: Extract metadata for main branch
        id: meta_main
        if: github.base_ref == 'main'
        run: |
          echo "::set-output name=tags::jnstockley/api:testing,jnstockley/api:testing-$(date +'%Y%m%d%H%M%S')"

      - name: Build and push Docker images
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags || steps.meta_main.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

