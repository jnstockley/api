---
name: Sync from External Repo

on:
  workflow_dispatch:
    inputs:
      source_repo:
        description: 'Full URL of the source repo (e.g. https://github.com/org/source-repo.git)'
        required: true
        default: 'https://github.com/jnstockley/python-starter.git'
      source_branch:
        description: 'Branch to pull from (e.g. main)'
        required: true
        default: 'main'
      target_branch:
        description: 'Branch to create or update in this repo'
        required: true
        default: 'sync/external-update'

permissions:
  contents: write
  pull-requests: write

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Add and fetch source repository
        run: |
          git remote add source ${{ github.event.inputs.source_repo }}
          git fetch source ${{ github.event.inputs.source_branch }}

      - name: Attempt merge
        id: merge
        run: |
          set -e
          git checkout -B ${{ github.event.inputs.target_branch }}

          echo "Merging from source/${{ github.event.inputs.source_branch }} ..."
          # Try merging unrelated histories but do not commit automatically
          set +e
          git merge source/${{ github.event.inputs.source_branch }} \
            --allow-unrelated-histories --no-commit --no-ff
          MERGE_STATUS=$?
          set -e

          # Stage all changes so we can detect real diffs
          git add -A

          # Now detect if anything actually changed
          if git diff --cached --quiet; then
            echo "✅ No file changes detected after merge attempt, skipping PR creation."
            echo "has_changes=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Handle merge conflicts or normal merge
          if [ $MERGE_STATUS -ne 0 ]; then
            echo "⚠️ Merge conflicts detected. Committing partial merge for manual resolution."
            git commit -m "Partial merge with conflicts from source repo (manual resolution required)" || true
          else
            git commit -m "Merge from external repo: ${{ github.event.inputs.source_branch }}"
          fi

          echo "has_changes=true" >> $GITHUB_OUTPUT

      - name: Push merge branch
        if: steps.merge.outputs.has_changes == 'true'
        run: |
          git push origin HEAD:${{ github.event.inputs.target_branch }} --force

      - name: Create Pull Request
        if: steps.merge.outputs.has_changes == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.event.inputs.target_branch }}
          title: "Merge update from external repo: ${{ github.event.inputs.source_branch }}"
          body: |
            This pull request merges changes from **${{ github.event.inputs.source_repo }}**
            branch **${{ github.event.inputs.source_branch }}**.

            ⚠️ If there are merge conflicts, please resolve them manually in the GitHub UI.
