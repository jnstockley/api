---
name: API (Dev)
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - '0.0.0.0:5001:5000'
    networks:
      - api
    restart: unless-stopped
    healthcheck:
      test: curl --fail http://localhost:5000/health-check || exit 1
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s
    develop:
      watch:
        - action: rebuild
          path: Dockerfile
        - action: rebuild
          path: src/
        - action: rebuild
          path: pyproject.toml
        - action: rebuild
          path: uv.lock
        - action: sync+restart
          path: compose-dev.yml
          target: api
        - action: sync+restart
          path: .env
          target: api
  db:
    image: postgres:17-alpine
    container_name: postgres
    volumes:
      - ./postgres:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - '0.0.0.0:5432:5432'
    networks:
      - api
    restart: always
    healthcheck:
      test: pg_isready -U postgres
      interval: 60s
      retries: 5
      start_period: 20s
      timeout: 10s

networks:
  api:
    name: api
